{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "../src/",
  "sources": [
    "main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\r\n\r\n{app, BrowserWindow, ipcMain} = require 'electron'\r\n{autoUpdater} = require 'electron-updater'\r\nurl = require 'url'\r\npath = require 'path'\r\nParser = require 'rss-parser'\r\nfs = require 'fs-extra'\r\nobjectEncryptor = require 'object-encryptor'\r\nkeys = require './keys.json'\r\nObjectID = require 'bson-objectid'\r\nPusher = require 'pusher'\r\nPusherJs = require 'pusher-js'\r\nobjectEncryptor = require 'object-encryptor'\r\npusherSend = null\r\npusherRec = null\r\nappChannel = null\r\nparser = new Parser()\r\ndb = null\r\nuser = null\r\n\r\nmainWindow = null\r\nchild = null\r\n  \r\nsync = ->\r\n  data =\r\n    clientID: user.clientID\r\n    channelID: user.channelID\r\n    date: new Date().valueOf()\r\n    lastSyncDate: user.lastSyncDate\r\n  data.listens = await db.select 'listens',\r\n    date:\r\n      $gt: user.lastSyncDate\r\n  data.subscriptions = await db.select 'subscriptions',\r\n    date:\r\n      $gt: user.lastSyncDate\r\n  pusherSend.trigger 'global', 'sync', data\r\n  pusherSend.trigger 'app-' + user.channelID, 'sync', data\r\n  \r\nonSync = (data) ->\r\n  return if data.clientID is user.clientID\r\n  upsertListens = (listens) ->\r\n    for listen in listens\r\n      delete listen.channelID\r\n      db.upsert 'listens', listen,\r\n        url: listen.url\r\n  upsertSubscriptions = (subscriptions) ->\r\n    for subscription in subscriptions\r\n      delete subscription.channelID\r\n      db.upsert 'subscriptions', subscription,\r\n        url: subscription.url\r\n        date: subscription.date\r\n  upsertListens data.listens if data.listens\r\n  upsertSubscriptions data.subscriptions if data.subscriptions\r\n  user.lastSyncDate = data.date\r\n  db.update 'users', user,\r\n    _id: user._id\r\n  mainWindow.webContents.send 'podcasts', await refreshFeeds()\r\n\r\nready = ->\r\n  keys = await objectEncryptor.decrypt keys, ['pusher']  \r\n  pusherSend = new Pusher keys.pusher\r\n  pusherRec = new PusherJs keys.pusher.key,\r\n    cluster: keys.pusher.cluster\r\n    forceTLS: keys.pusher.useTLS\r\n  autoUpdater.checkForUpdatesAndNotify()\r\n  db = require 'ndxdb'\r\n  .config\r\n    database: 'db'\r\n    tables: ['podcasts', 'subscriptions', 'users', 'listens']\r\n    localStorage: path.join app.getPath('userData'), 'data'\r\n    autoId: '_id'\r\n    doNotEncrypt: true\r\n  .on 'ready', ->\r\n    #db.delete 'listens'\r\n    #db.delete 'users'\r\n    #db.delete 'subscriptions'\r\n    #db.delete 'podcasts'\r\n    user = await db.selectOne 'users'\r\n    console.log user\r\n    if not user\r\n      user = await db.insert 'users',\r\n        clientID: ObjectID.generate()\r\n        channelID: ObjectID.generate()\r\n        lastSyncDate: 0\r\n        width: 800\r\n        height: 600\r\n      openJoinWindow()\r\n    options = \r\n      width: user.width or 800\r\n      height: user.height or 600\r\n      autoHideMenuBar: true\r\n      webPreferences:\r\n        nodeIntegration: true\r\n    if typeof(user.x) is 'number'\r\n      options.x = user.x\r\n      options.y = user.y\r\n    mainWindow = new BrowserWindow options\r\n    mainWindow.on 'closed', ->\r\n      mainWindow = null\r\n    mainWindow.loadURL url.format\r\n      pathname: path.join __dirname, 'index.html'\r\n      protocol: 'file:'\r\n      slashes: true\r\n    saveWindowPosition = ->\r\n      size = mainWindow.getSize()\r\n      pos = mainWindow.getPosition()\r\n      user.width = size[0]\r\n      user.height = size[1]\r\n      user.x = pos[0]\r\n      user.y = pos[1]\r\n      console.log 'saving user', user\r\n      db.update 'users', user,\r\n        _id: user._id\r\n    mainWindow.on 'resize', saveWindowPosition\r\n    mainWindow.on 'move', saveWindowPosition\r\n    #mainWindow.openDevTools()\r\n    appChannel = pusherRec.subscribe 'app-' + user.channelID\r\n    appChannel.bind 'sync', (data) ->\r\n      onSync data\r\n    sync()\r\n  .start()\r\napp.on 'ready', ->\r\n  mainWindow or ready()\r\napp.on 'window-all-closed', ->\r\n  process.platform is 'darwin' or app.quit()\r\napp.on 'activiate', ->\r\n  mainWindow or ready()\r\n  \r\nsanitizeUrl = (url) ->\r\n  url\r\n  \r\nfetchAndUpsertPodcast = (url) ->\r\n  console.log 'upsert', url\r\n  podcast = await parser.parseURL url\r\n  podcast.url = url\r\n  podcast.lastVisited = new Date()\r\n  db.upsert 'podcasts', podcast,\r\n    url: podcast.url\r\n  return podcast\r\n  \r\nfetchPodcast = (url) ->\r\n  url = sanitizeUrl url\r\n  dbPodcast = await db.selectOne 'podcasts',\r\n    url: url\r\n  if dbPodcast\r\n    if new Date(dbPodcast.lastVisited).valueOf() + (2 * 60 * 60 * 1000) < new Date().valueOf()\r\n      podcast = await fetchAndUpsertPodcast url\r\n      return podcast\r\n  else\r\n    dbPodcast = await fetchAndUpsertPodcast url\r\n  return dbPodcast\r\n  \r\nreportListen = (details, context) ->\r\n  db.upsert 'listens', details,\r\n    url: details.url\r\n  listens = await db.select 'listens'\r\n  pusherSend.trigger 'app-' + user.channelID, 'report-listens', \r\n    channelID: user.channelID\r\n    clientID: user.clientID\r\n    listens: [details]\r\n  if context is 'global'\r\n    details.channelID = user.channelID\r\n    pusherSend.trigger 'global', 'report-listens', \r\n      channelID: user.channelID\r\n      clientID: user.clientID\r\n      listens: [details]\r\n  \r\nrefreshFeeds = ->\r\n  subscriptions = await db.select 'subscriptions'\r\n  subscriptions.sort (a,b) ->\r\n    if a.date > b.date then 1 else -1\r\n  mysubs = {}\r\n  for subscription in subscriptions\r\n    mysubs[subscription.url] = subscription.status\r\n  mysubs = Object.keys(mysubs).filter (key) -> mysubs[key]\r\n  podcasts = []\r\n  for subscription in mysubs\r\n    podcast = await fetchPodcast subscription\r\n    podcasts.push podcast\r\n  listens = await db.select 'listens'\r\n  podcasts: podcasts\r\n  listens: listens\r\n  \r\nupdateSubscription = (url, status) ->\r\n  sub =\r\n    url: url\r\n    status: status\r\n    date: new Date().valueOf()\r\n  await db.insert 'subscriptions', sub\r\n  sub.channelID = user.channelID\r\n  pusherSend.trigger 'app-' + user.channelID, 'report-subscriptions', \r\n    channelID: user.channelID\r\n    clientID: user.clientID\r\n    subscriptions: [sub]\r\n  pusherSend.trigger 'global', 'report-subscriptions', \r\n    channelID: user.channelID\r\n    clientID: user.clientID\r\n    subscriptions: [sub]\r\nipcMain.on 'get-user', (win) ->\r\n  win.sender.webContents.send 'user', user\r\nipcMain.on 'add-podcast', (win, url) ->\r\n  podcast = await fetchPodcast url\r\n  if podcast\r\n    updateSubscription url, true\r\n  win.sender.webContents.send 'podcasts', await refreshFeeds()\r\nipcMain.on 'unsubscribe', (win, url) ->\r\n  updateSubscription url, false\r\n  win.sender.webContents.send 'podcasts', await refreshFeeds()\r\nipcMain.on 'get-podcasts', (win, url) ->\r\n  win.sender.webContents.send 'podcasts', await refreshFeeds()\r\nipcMain.on 'get-listens', (win) ->\r\n  listens = await db.select 'listens'\r\n  win.sender.webContents.send 'listens', listens\r\nipcMain.on 'check-for-new', (win) ->\r\n  podcasts = await db.select 'podcasts'\r\n  updated = []\r\n  for podcast in podcasts\r\n    newPodcast = await fetchPodcast podcast.url\r\n    if newPodcast.items[0]?.pubDate isnt podcast.items[0]?.pubDate\r\n      updated.push newPodcast\r\n  if updated.length\r\n    console.log 'sending updates', updated.length\r\n    win.sender.webContents.send 'podcasts', await refreshFeeds()\r\nipcMain.on 'app-listen', (win, details) ->\r\n  reportListen details, 'app'\r\nipcMain.on 'global-listen', (win, details) ->\r\n  reportListen details, 'global'\r\nipcMain.on 'get-channel', (win) ->\r\n  myobj =\r\n    channelID: user.channelID\r\n  myobj = await objectEncryptor.encrypt myobj, ['channelID']\r\n  ###\r\n  child = new BrowserWindow\r\n    parent: mainWindow\r\n    modal: true\r\n    show: false\r\n    autoHideMenuBar: true\r\n    width: 435\r\n    height: 140\r\n    webPreferences:\r\n      nodeIntegration: true\r\n  child.on 'closed', ->\r\n    child = null\r\n  child.loadURL url.format\r\n    pathname: path.join __dirname, 'get-channel.html'\r\n    protocol: 'file:'\r\n    slashes: true\r\n  child.once 'ready-to-show', ->\r\n    child.show()\r\n    child.webContents.send 'channel-id', myobj.channelID\r\n  console.log myobj.channelID\r\n  ###\r\n  win.sender.webContents.send 'channel-id', myobj.channelID\r\nopenJoinWindow = ->\r\n  child = new BrowserWindow\r\n    parent: mainWindow\r\n    modal: true\r\n    show: false\r\n    autoHideMenuBar: true\r\n    width: 435\r\n    height: 140\r\n    webPreferences:\r\n      nodeIntegration: true\r\n  child.on 'closed', ->\r\n    child = null\r\n  child.loadURL url.format\r\n    pathname: path.join __dirname, 'join-channel.html'\r\n    protocol: 'file:'\r\n    slashes: true\r\n  child.once 'ready-to-show', ->\r\n    child.show()\r\nipcMain.on 'join-channel', openJoinWindow\r\nipcMain.on 'set-channel-id', (win, channelID) ->\r\n  myobj =\r\n    channelID: channelID\r\n  console.log myobj\r\n  myobj = await objectEncryptor.decrypt myobj, ['channelID']\r\n  console.log myobj\r\n  if myobj.channelID\r\n    user.channelID = myobj.channelID\r\n    user.lastSyncDate = 0\r\n    db.update 'users', user,\r\n      _id: user._id\r\n    db.delete 'podcasts'\r\n    db.delete 'subscriptions'\r\n    db.delete 'listens'\r\n    child.close()\r\n    appChannel = pusherRec.subscribe 'app-' + user.channelID\r\n    appChannel.bind 'sync', (data) ->\r\n      console.log 'sync called'\r\n      console.log data\r\n      onSync data\r\n    await sync()"
  ]
}