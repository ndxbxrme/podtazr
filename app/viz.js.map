{
  "version": 3,
  "file": "viz.js",
  "sourceRoot": "../src/",
  "sources": [
    "viz.coffee"
  ],
  "names": [],
  "mappings": "AAAA;EAAA,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,QAAD,CAAA;AACf,QAAA,YAAA,EAAA,MAAA,EAAA,SAAA,EAAA;IAAA,QAAQ,CAAC,OAAT,GAAmB;IACnB,YAAA,GAAe,QAAQ,CAAC;IACxB,SAAA,GAAY,IAAI,UAAJ,CAAe,YAAf;IACZ,MAAA,GAAS,QAAQ,CAAC,aAAT,CAAuB,QAAvB;IACT,SAAA,GAAY,MAAM,CAAC,UAAP,CAAkB,IAAlB;WACZ;MAAA,IAAA,EAAM,QAAA,CAAA,CAAA;AACJ,YAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,CAAA,EAAA;QAAA,QAAQ,CAAC,oBAAT,CAA8B,SAA9B;QACA,SAAS,CAAC,SAAV,GAAsB;QACtB,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,MAAM,CAAC,KAAhC,EAAuC,MAAM,CAAC,MAA9C;QACA,SAAS,CAAC,SAAV,GAAsB;QACtB,SAAS,CAAC,WAAV,GAAwB;QACxB,SAAS,CAAC,SAAV,CAAA;QACA,UAAA,GAAa,MAAM,CAAC,KAAP,GAAe,GAAf,GAAqB,YAArB,GAAoC;QACjD,CAAA,GAAI;QACJ,CAAA,GAAI,CAAC;AACL,eAAM,CAAA,EAAA,GAAM,YAAZ;UACE,CAAA,GAAI,SAAU,CAAA,CAAA,CAAV,GAAe;UACnB,CAAA,GAAI,CAAA,GAAI,MAAM,CAAC,MAAX,GAAoB;UACxB,CAAA,GAAI,MAAM,CAAC,MAAP,GAAgB;UACpB,IAAG,CAAA,KAAK,CAAR;YACE,SAAS,CAAC,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EADF;WAAA,MAAA;YAGE,SAAS,CAAC,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EAHF;;UAIA,CAAA,IAAK,UAAA,GAAa,CAAC,CAAA,GAAI,CAAC,CAAA,GAAI,CAAL,CAAL;QARpB,CATA;;eAmBA,SAAS,CAAC,MAAV,CAAA;MApBI;IAAN;EANe;AAAjB",
  "sourcesContent": [
    "module.exports = (analyser) ->\r\n  analyser.fftSize = 2048\r\n  bufferLength = analyser.frequencyBinCount\r\n  dataArray = new Uint8Array bufferLength\r\n  canvas = document.querySelector 'canvas'\r\n  canvasCtx = canvas.getContext '2d'\r\n  draw: ->\r\n    analyser.getByteFrequencyData dataArray\r\n    canvasCtx.fillStyle = 'rgb(0, 0, 0)'\r\n    canvasCtx.fillRect 0, 0, canvas.width, canvas.height\r\n    canvasCtx.lineWidth = 2\r\n    canvasCtx.strokeStyle = 'rgb(0, 140, 140)'\r\n    canvasCtx.beginPath()\r\n    sliceWidth = canvas.width * 1.0 / bufferLength * 28\r\n    x = 0\r\n    i = -1\r\n    while i++ < bufferLength\r\n      v = dataArray[i] / 128.0\r\n      y = v * canvas.height / 2\r\n      y = canvas.height - y\r\n      if i is 0\r\n        canvasCtx.moveTo x, y\r\n      else\r\n        canvasCtx.lineTo x, y\r\n      x += sliceWidth * (5 / (i + 1))\r\n    #canvasCtx.lineTo canvas.width, canvas.height / 2\r\n    canvasCtx.stroke()"
  ]
}